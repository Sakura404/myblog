/*
 Navicat Premium Data Transfer

 Source Server         : localhost_3306
 Source Server Type    : MySQL
 Source Server Version : 80023
 Source Host           : localhost:3306
 Source Schema         : myblog

 Target Server Type    : MySQL
 Target Server Version : 80023
 File Encoding         : 65001

 Date: 13/01/2022 01:52:13
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for mb_comments
-- ----------------------------
DROP TABLE IF EXISTS `mb_comments`;
CREATE TABLE `mb_comments`  (
  `comment_id` int NOT NULL AUTO_INCREMENT,
  `post_id` int NOT NULL,
  `user_id` int NOT NULL,
  `reply_id` int NULL DEFAULT NULL,
  `comment_content` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `comment_status` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `comment_date` datetime NOT NULL,
  PRIMARY KEY (`comment_id`) USING BTREE,
  INDEX `post_idmb_posts`(`post_id`) USING BTREE,
  INDEX `self`(`reply_id`) USING BTREE,
  INDEX `mb_comments_ibfk_1`(`user_id`) USING BTREE,
  CONSTRAINT `mb_comments_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `mb_users` (`user_id`) ON DELETE CASCADE ON UPDATE RESTRICT,
  CONSTRAINT `post_idmb_posts` FOREIGN KEY (`post_id`) REFERENCES `mb_posts` (`post_id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `self` FOREIGN KEY (`reply_id`) REFERENCES `mb_comments` (`comment_id`) ON DELETE SET NULL ON UPDATE SET NULL
) ENGINE = InnoDB AUTO_INCREMENT = 1001 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of mb_comments
-- ----------------------------
INSERT INTO `mb_comments` VALUES (15, 26, 8, NULL, '不错!!!', 'public', '2022-01-02 03:52:35');
INSERT INTO `mb_comments` VALUES (16, 26, 9, 15, '感谢', 'public', '2022-01-02 03:55:57');
INSERT INTO `mb_comments` VALUES (17, 26, 8, 16, '加油', 'public', '2022-01-02 06:35:32');

-- ----------------------------
-- Table structure for mb_posts
-- ----------------------------
DROP TABLE IF EXISTS `mb_posts`;
CREATE TABLE `mb_posts`  (
  `post_id` int NOT NULL AUTO_INCREMENT,
  `post_title` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `post_author` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `post_date` datetime NOT NULL,
  `post_modified` datetime NOT NULL,
  `post_content` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `post_excerpt` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  `post_status` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  PRIMARY KEY (`post_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1020 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of mb_posts
-- ----------------------------
INSERT INTO `mb_posts` VALUES (1, '读《蒲公英女孩》有感', 'sakura', '2021-10-14 22:14:56', '2021-10-11 22:54:08', '          <!--  -->\r\n        <p\r\n          style=\"\r\n            background-repeat: no-repeat;\r\n            box-sizing: inherit;\r\n            padding: 0px;\r\n            margin: 0px 0px 16px;\r\n            border-top-left-radius: inherit;\r\n            border-top-right-radius: inherit;\r\n            color: rgba(0, 0, 0, 0.87);\r\n            font-family: \'Noto Serif SC\', \'Source Han Serif SC\',\r\n              \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\',\r\n              \'MicroSoft Yahei\', Georgia, serif;\r\n            font-size: 16px;\r\n            line-height: 2;\r\n          \"\r\n        >\r\n          <span\r\n            style=\"\r\n              background-repeat: no-repeat;\r\n              box-sizing: inherit;\r\n              padding: 0px;\r\n              margin: 0px;\r\n              font-family: \'Noto Serif SC\', \'Noto Serif SC\',\r\n                \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc,\r\n                \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\r\n              font-size: 12pt;\r\n            \"\r\n            >该小说是科幻小说作家罗伯特.富兰克林.杨发表于1961年的科幻小说，一次偶然的机会让我在一档电视节目上看见这小说，介绍有小说中这样的一句话：&ldquo;前天我看见了一只兔子，昨天是鹿，今天则是你&rdquo;唤醒了我在几年前冬日的记忆。那时候我正在看一部名为《CLANNAD》的动画。片中引用了这一句话用于引出男主人公朋也与他小时候的遇见的女孩琴美的感情。于是我带着小孩子般的好奇心去阅读了这篇小说。</span\r\n          >\r\n        </p>\r\n        <p\r\n          style=\"\r\n            background-repeat: no-repeat;\r\n            box-sizing: inherit;\r\n            padding: 0px;\r\n            margin: 0px 0px 16px;\r\n            color: rgba(0, 0, 0, 0.87);\r\n            font-family: \'Noto Serif SC\', \'Source Han Serif SC\',\r\n              \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\',\r\n              \'MicroSoft Yahei\', Georgia, serif;\r\n            font-size: 16px;\r\n            line-height: 2;\r\n          \"\r\n        >\r\n          <span\r\n            style=\"\r\n              background-repeat: no-repeat;\r\n              box-sizing: inherit;\r\n              padding: 0px;\r\n              margin: 0px;\r\n              font-family: \'Noto Serif SC\', \'Noto Serif SC\',\r\n                \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc,\r\n                \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\r\n              font-size: 12pt;\r\n            \"\r\n            >小说以男主人公马克.伦道夫的视角出发，讲述了四十四岁的他休假期间时在山上遇见了有着蒲公英般色泽的头发的少女朱莉.丹弗斯。朱莉宣称自己来自于未来，这里是她最喜欢的时间坐标，在这里她前天看见的一只兔子，昨天是一头鹿，今天则是马克。尽管马克不相信时间旅行这一回事，但他还是假装相信地同朱莉交谈。多次的交谈后，马克发现自己与朱莉有着许多相同的爱好。</span\r\n          >\r\n        </p>\r\n        <p\r\n          style=\"\r\n            background-repeat: no-repeat;\r\n            box-sizing: inherit;\r\n            padding: 0px;\r\n            margin: 0px 0px 16px;\r\n            color: rgba(0, 0, 0, 0.87);\r\n            font-family: \'Noto Serif SC\', \'Source Han Serif SC\',\r\n              \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\',\r\n              \'MicroSoft Yahei\', Georgia, serif;\r\n            font-size: 16px;\r\n            line-height: 2;\r\n          \"\r\n        >\r\n          <span\r\n            style=\"\r\n              background-repeat: no-repeat;\r\n              box-sizing: inherit;\r\n              padding: 0px;\r\n              margin: 0px;\r\n              font-family: \'Noto Serif SC\', \'Noto Serif SC\',\r\n                \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc,\r\n                \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\r\n              font-size: 12pt;\r\n            \"\r\n            >在这之后的两三天，马克再上山并没有再见到朱莉，为此&ldquo;马克吃不下也睡不着，对钓鱼也失去了兴趣，书更是读不进去&rdquo;。就在他已经不抱任何希望上山的时候，他碰上了朱莉，在交谈后他得知她父亲去世的事，同时她也说了时光机器出零件出了问题，可能只有一次机会再进行时空旅行。在这之后朱莉便向马克告了白，&ldquo;万一我没法来的话......请记住我爱你&rdquo;。从此马克再也没有见到过朱莉，他向附近的邮局打听到附近没有姓丹弗斯的人家，而且上一次附近的葬礼已是去年的事。马克这才明白朱莉并没有在开玩笑。</span\r\n          >\r\n        </p>\r\n        <p\r\n          style=\"\r\n            background-repeat: no-repeat;\r\n            box-sizing: inherit;\r\n            padding: 0px;\r\n            margin: 0px 0px 16px;\r\n            color: rgba(0, 0, 0, 0.87);\r\n            font-family: \'Noto Serif SC\', \'Source Han Serif SC\',\r\n              \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\',\r\n              \'MicroSoft Yahei\', Georgia, serif;\r\n            font-size: 16px;\r\n            line-height: 2;\r\n          \"\r\n        >\r\n          <span\r\n            style=\"\r\n              background-repeat: no-repeat;\r\n              box-sizing: inherit;\r\n              padding: 0px;\r\n              margin: 0px;\r\n              font-family: \'Noto Serif SC\', \'Noto Serif SC\',\r\n                \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc,\r\n                \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\r\n              font-size: 12pt;\r\n            \"\r\n            >在十一月的一个中旬，马克在偶然间打开了妻子嘱咐自己不要打开的手提箱。里面是一条连衣裙和一张纸条。纸条上写着&ldquo;前天我看见了一只兔子，昨天是鹿，今天则是你&rdquo;。这一句话让马克了解到了真相，朱莉在那之后通过时间旅行到了自己20岁的时候与自己相爱。</span\r\n          >\r\n        </p>\r\n        <p\r\n          style=\"\r\n            background-repeat: no-repeat;\r\n            box-sizing: inherit;\r\n            padding: 0px;\r\n            margin: 0px 0px 16px;\r\n            color: rgba(0, 0, 0, 0.87);\r\n            font-family: \'Noto Serif SC\', \'Source Han Serif SC\',\r\n              \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\',\r\n              \'MicroSoft Yahei\', Georgia, serif;\r\n            font-size: 16px;\r\n            line-height: 2;\r\n          \"\r\n        >\r\n          <span\r\n            style=\"\r\n              background-repeat: no-repeat;\r\n              box-sizing: inherit;\r\n              padding: 0px;\r\n              margin: 0px;\r\n              font-family: \'Noto Serif SC\', \'Noto Serif SC\',\r\n                \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc,\r\n                \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\r\n              font-size: 12pt;\r\n            \"\r\n            >短短的一万字小说虽然不一会就读完，但是带给我的震撼却不是简简单单的一万字可以描述。&ldquo;前天我看见了一只兔子，昨天是鹿，今天则是你&rdquo;这一句话前前后后在文中出现了六次，这一句话正是代表了女主人公朱莉一开始与马克相见的回忆，可以说是二人的恋情的开始。尽管相隔多年，这一感觉仍然能铭记于心。除此之外，小说中也多次提到了马克妻子眼神中总是怀着微妙的恐惧。对于恐惧我理解为朱莉对于孤身一人生活在陌生年代的恐惧，也有朱莉对于马克40岁时会爱上她而20岁的他是否又会有相同的感觉的恐惧，最后便是她对于丈夫40岁的时候在山上遇见自己这一事情是否会因自己的穿越而变的恐惧。</span\r\n          >\r\n        </p>\r\n        <p\r\n          style=\"\r\n            background-repeat: no-repeat;\r\n            box-sizing: inherit;\r\n            padding: 0px;\r\n            margin: 0px 0px 16px;\r\n            color: rgba(0, 0, 0, 0.87);\r\n            font-family: \'Noto Serif SC\', \'Source Han Serif SC\',\r\n              \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\',\r\n              \'MicroSoft Yahei\', Georgia, serif;\r\n            font-size: 16px;\r\n            line-height: 2;\r\n          \"\r\n        >\r\n          <span\r\n            style=\"\r\n              background-repeat: no-repeat;\r\n              box-sizing: inherit;\r\n              padding: 0px;\r\n              margin: 0px;\r\n              font-family: \'Noto Serif SC\', \'Noto Serif SC\',\r\n                \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc,\r\n                \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\r\n              font-size: 12pt;\r\n            \"\r\n            >小说中有着这样一句话&ldquo;时间这本书早已写成，未来世界的某个人参与了过去的某个事件，那他也就成为了这个事件的一部分，这是因为他原本就是该事件的一部分&rdquo;令我感想良多。期朱莉能够自由自在的来回于各个时代就是因为她坚信着她父亲所说的这一句话。但是后面她在明知马克40多岁的时候早已有了妻子的情况下，仍穿越到马克20岁的时候与他相爱，最后成为他的妻子。这对应了这一句话的同时也让我想到了所谓命中注定的这一回事都是在人有所行动下的结果。</span\r\n          >\r\n        </p>\r\n        <p\r\n          style=\"\r\n            background-repeat: no-repeat;\r\n            box-sizing: inherit;\r\n            padding: 0px;\r\n            margin: 0px 0px 16px;\r\n            color: rgba(0, 0, 0, 0.87);\r\n            font-family: \'Noto Serif SC\', \'Source Han Serif SC\',\r\n              \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\',\r\n              \'MicroSoft Yahei\', Georgia, serif;\r\n            font-size: 16px;\r\n            line-height: 2;\r\n          \"\r\n        >\r\n          <span\r\n            style=\"\r\n              background-repeat: no-repeat;\r\n              box-sizing: inherit;\r\n              padding: 0px;\r\n              margin: 0px;\r\n              font-family: \'Noto Serif SC\', \'Noto Serif SC\',\r\n                \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc,\r\n                \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\r\n              font-size: 12pt;\r\n            \"\r\n            >若是朱莉在了解马克有妻子后就不作为，我想她最后也不会成为马克的妻子。这就如同一个本来就挺认真努力的人在听信算命说自己将来会荣华富贵后，而就从此就变的堕落懒散的一样。最后也不会有什么好的结果。电影《终结者》中有这样的一句话：&ldquo;没有命运，命运要靠自己创造&rdquo;，我想这和我由这篇小说所想到的应该是一样的。</span\r\n          >\r\n        </p>\r\n        <p\r\n          style=\"\r\n            background-repeat: no-repeat;\r\n            box-sizing: inherit;\r\n            padding: 0px;\r\n            margin: 0px 0px 16px;\r\n            color: rgba(0, 0, 0, 0.87);\r\n            font-family: \'Noto Serif SC\', \'Source Han Serif SC\',\r\n              \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\',\r\n              \'MicroSoft Yahei\', Georgia, serif;\r\n            font-size: 16px;\r\n            line-height: 2;\r\n          \"\r\n        >\r\n          <span\r\n            style=\"\r\n              background-repeat: no-repeat;\r\n              box-sizing: inherit;\r\n              padding: 0px;\r\n              margin: 0px;\r\n              font-family: \'Noto Serif SC\', \'Noto Serif SC\',\r\n                \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc,\r\n                \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\r\n              font-size: 12pt;\r\n            \"\r\n            >作为当代青年的一员，我认为我们确实不应该对自己未来要走的路迷茫而停滞不前，甚至自暴自弃。&ldquo;穷且益坚,不坠青云之志&rdquo;，一时的困窘只是磨练自己的意志，不应该忘记自己曾经的理想。</span\r\n          >\r\n        </p>\r\n<!--  -->', '前天看到了小兔，昨天是小鹿，今天是你', 'public');
INSERT INTO `mb_posts` VALUES (26, '2021-7-5  ', 'senkaryouran', '2021-10-30 13:38:00', '2021-10-31 17:38:17', '<div class=\"mce-toc\">\n<h2>目录</h2>\n<ul>\n<li><a href=\"#mcetoc_1fj99rhts5g\">2021-7-5&nbsp;&nbsp;</a>\n<ul>\n<li><a href=\"#mcetoc_1fj99rhts5h\">计算机网络</a>\n<ul>\n<li><a href=\"#mcetoc_1fj99rhts5i\">UDP和TCP的区别</a></li>\n<li><a href=\"#mcetoc_1fj99rhts5j\">服务器与客户端连接之间如何唯一标识一个连接</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1fj99rhts5k\">算法</a>\n<ul>\n<li><a href=\"#mcetoc_1fj99rhts5l\">实现归并排序（最基本的就行）</a></li>\n<li><a href=\"#mcetoc_1fj99rhts5m\">希尔排序</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1fj99rhts5n\">java</a>\n<ul>\n<li><a href=\"#mcetoc_1fj99rhts5o\">常见的容器（例：ArrayList）</a></li>\n<li><a href=\"#mcetoc_1fj99rhts5p\">String 类的常用方法都有那些？</a></li>\n<li><a href=\"#mcetoc_1fj99rhts5q\">迭代器 Iterator 是什么？</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n<h1 id=\"mcetoc_1fj99rhts5g\">2021-7-5&nbsp;&nbsp;</h1>\n<h2 id=\"mcetoc_1fj99rhts5h\"><span class=\"md-plain md-expand\" style=\"box-sizing: border-box; font-family: \' Noto Serif SC\', \'Noto Serif SC\', \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\">计算机网络</span></h2>\n<hr />\n<h3 id=\"mcetoc_1fj99rhts5i\"><span class=\"md-pair-s\" style=\"box-sizing: border-box; font-family: \' Noto Serif SC\', \'Noto Serif SC\', \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \'; font-size: 14pt;\">UDP和TCP的区别</span></h3>\n<p><span style=\"font-family: \' Noto Serif SC\', \'Noto Serif SC\', \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \'; font-size: 12pt;\"><span class=\"md-plain\" style=\"box-sizing: border-box;\">Tcp是面向连接的可靠传输，有错误重传等功能，udp是尽最大努力交付传输，即不保证数据的可靠性</span><span class=\"md-softbreak\" style=\"box-sizing: border-box;\">&nbsp;</span><span class=\"md-plain\" style=\"box-sizing: border-box;\">由于现在网络差错小，大多时候可以用udp，而不需要实现tcp的复杂功能，而在对数据有要求的网络下则要求使用tcp</span><span class=\"md-softbreak\" style=\"box-sizing: border-box;\">&nbsp;</span><span class=\"md-plain\" style=\"box-sizing: border-box;\">Tcp连接的话，通过三次握手连接，四次挥手断开连接，建立连接过程有个序号标识双方</span></span></p>\n<h3 id=\"mcetoc_1fj99rhts5j\"><span style=\"font-family: \' Noto Serif SC\', \'Noto Serif SC\', \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \'; font-size: 14pt;\"><span style=\"box-sizing: border-box; color: #333333; orphans: 4; white-space: pre-wrap;\">服务器与客户端连接之间如何唯一标识一个连接</span></span></h3>\n<p><span style=\"font-family: \' Noto Serif SC\', \'Noto Serif SC\', \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \'; font-size: 12pt;\"><span style=\"box-sizing: border-box; color: #333333; orphans: 4; white-space: pre-wrap;\"><span class=\"md-plain\" style=\"box-sizing: border-box;\"><span style=\"color: #333333; font-family: Noto Serif SC, Noto Serif SC, Source Han Serif SC, Source Han Serif, source-han-serif-sc, PT Serif, SongTi SC, MicroSoft Yahei, Georgia, serif;\"><span style=\"white-space: pre-wrap;\">WebSocket客户端和WebSocket服务器建立连接后，在WebSocket服务器端会为每一个新连接分配一个socket id，用于唯一标识这个连接。</span></span></span></span></span></p>\n<h2 id=\"mcetoc_1fj99rhts5k\"><span style=\"font-family: \' Noto Serif SC\', \'Noto Serif SC\', \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\">算法</span></h2>\n<hr />\n<h3 id=\"mcetoc_1fj99rhts5l\"><span style=\"font-family: \' Noto Serif SC\', \'Noto Serif SC\', \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\"><span style=\"font-family: Noto Serif SC, Noto Serif SC, Source Han Serif SC, Source Han Serif, source-han-serif-sc, PT Serif, SongTi SC, MicroSoft Yahei, Georgia, serif;\">实现归并排序（最基本的就行）</span></span></h3>\n<pre class=\"language-java\" style=\"font-size: medium; word-spacing: 0px;\"><code>public static void Mergesort(int[] nums, int low, int high) {\n		if (low &gt;= high)\n			return;\n		int p1 = low, p2 = (low + high) / 2 + 1;\n		int[] re = new int[nums.length];\n		Mergesort(nums, p1, high / 2);\n		Mergesort(nums, p2, high);\n		int i = low;\n		while (p1 &lt;= (low + high) / 2 &amp;&amp; p2 &lt;= high)\n			re[i++] = nums[p1] &lt; nums[p2] ? nums[p1++] : nums[p2++];\n		while (p1 &lt;= (low + high) / 2)\n			re[i++] = nums[p1++];\n		while (p2 &lt;= high)\n			re[i++] = nums[p2++];\n		for (i = low; i &lt;= high; i++)\n			nums[i] = re[i];\n	}</code></pre>\n<h3 id=\"mcetoc_1fj99rhts5m\"><span style=\"font-size: 14pt;\">希尔排序</span></h3>\n<pre class=\"language-java\" style=\"font-size: medium; word-spacing: 0px;\"><code>public static void ShellSort(int[] arr, int end, int star=0) {\n	int D = 1;\n	int total = 0;\n	while (D &lt; end / 2)\n	{\n		D = D * 3 - 1;\n	}\n	while (D &gt;= 1)\n	{	\n		\n		for (int i = D; i &lt; end; i++)\n		{\n			for (int x = i; x &gt;= D; x--)\n			{\n				if (arr[x - 1] &gt; arr[x])\n				{\n					swap(arr, x - 1, x);//swap为交换函数\n				}\n				else\n					break;\n			}\n		}\n		D /= 2;\n		\n	}\n}</code></pre>\n<h2 id=\"mcetoc_1fj99rhts5n\"><span style=\"font-family: \' Noto Serif SC\', \'Noto Serif SC\', \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\">java</span></h2>\n<hr />\n<h3 id=\"mcetoc_1fj99rhts5o\" class=\"md-end-block md-p\" style=\"box-sizing: border-box; line-height: inherit; orphans: 4; margin: 0.8em 0px; white-space: pre-wrap; position: relative; color: #333333; font-family: \'Open Sans\', \'Clear Sans\', \'Helvetica Neue\', Helvetica, Arial, \'Segoe UI Emoji\', sans-serif; font-size: 16px;\"><span class=\"md-pair-s \" style=\"box-sizing: border-box; font-family: \' Noto Serif SC\', \'Noto Serif SC\', \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \'; font-size: 14pt;\">常见的容器（例：ArrayList）</span></h3>\n<p class=\"md-end-block md-p\" style=\"font-size: 16px; box-sizing: border-box; line-height: inherit; orphans: 4; margin: 0.8em 0px; white-space: pre-wrap; position: relative; color: #333333; font-family: \'Open Sans\', \'Clear Sans\', \'Helvetica Neue\', Helvetica, Arial, \'Segoe UI Emoji\', sans-serif;\"><span class=\"md-plain\" style=\"box-sizing: border-box; font-family: \' Noto Serif SC\', \'Noto Serif SC\', \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\">Map Collection List Set Queue Iterable</span></p>\n<h3 id=\"mcetoc_1fj99rhts5p\" class=\"md-end-block md-p\" style=\"box-sizing: border-box; line-height: inherit; orphans: 4; margin: 0.8em 0px; white-space: pre-wrap; position: relative; color: #333333; font-family: \'Open Sans\', \'Clear Sans\', \'Helvetica Neue\', Helvetica, Arial, \'Segoe UI Emoji\', sans-serif; font-size: 16px;\"><span class=\"md-pair-s \" style=\"box-sizing: border-box; font-family: \' Noto Serif SC\', \'Noto Serif SC\', \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \'; font-size: 14pt;\">String 类的常用方法都有那些？</span></h3>\n<ol class=\"ol-list\" style=\"font-size: 16px; box-sizing: border-box; margin: 0.8em 0px; padding-left: 30px; position: relative; color: #333333; font-family: \'Open Sans\', \'Clear Sans\', \'Helvetica Neue\', Helvetica, Arial, \'Segoe UI Emoji\', sans-serif;\" start=\"\">\n<li class=\"md-list-item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\">\n<p class=\"md-end-block md-p\" style=\"box-sizing: border-box; line-height: inherit; orphans: 4; margin: 0px 0px 0.5rem; white-space: pre-wrap; position: relative;\"><span class=\"md-plain\" style=\"box-sizing: border-box; font-family: \' Noto Serif SC\', \'Noto Serif SC\', \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\">length()求长度</span></p>\n</li>\n<li class=\"md-list-item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\">\n<p class=\"md-end-block md-p\" style=\"box-sizing: border-box; line-height: inherit; orphans: 4; margin: 0px 0px 0.5rem; white-space: pre-wrap; position: relative;\"><span class=\"md-plain\" style=\"box-sizing: border-box; font-family: \' Noto Serif SC\', \'Noto Serif SC\', \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\">substring()截取字符串</span></p>\n</li>\n<li class=\"md-list-item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\">\n<p class=\"md-end-block md-p\" style=\"box-sizing: border-box; line-height: inherit; orphans: 4; margin: 0px 0px 0.5rem; white-space: pre-wrap; position: relative;\"><span class=\"md-plain\" style=\"box-sizing: border-box; font-family: \' Noto Serif SC\', \'Noto Serif SC\', \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\">split()分割字符串</span></p>\n</li>\n<li class=\"md-list-item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\">\n<p class=\"md-end-block md-p\" style=\"box-sizing: border-box; line-height: inherit; orphans: 4; margin: 0px 0px 0.5rem; white-space: pre-wrap; position: relative;\"><span class=\"md-plain\" style=\"box-sizing: border-box; font-family: \' Noto Serif SC\', \'Noto Serif SC\', \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\">equals()比较字符串</span></p>\n</li>\n<li class=\"md-list-item\" style=\"box-sizing: border-box; margin: 0px; position: relative;\">\n<p class=\"md-end-block md-p\" style=\"box-sizing: border-box; line-height: inherit; orphans: 4; margin: 0px 0px 0.5rem; white-space: pre-wrap; position: relative;\"><span class=\"md-plain\" style=\"box-sizing: border-box; font-family: \' Noto Serif SC\', \'Noto Serif SC\', \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\">indexOf()指定索引</span></p>\n</li>\n</ol>\n<h3 id=\"mcetoc_1fj99rhts5q\" class=\"md-end-block md-p\" style=\"box-sizing: border-box; line-height: inherit; orphans: 4; margin: 0.8em 0px; white-space: pre-wrap; position: relative; color: #333333; font-family: \'Open Sans\', \'Clear Sans\', \'Helvetica Neue\', Helvetica, Arial, \'Segoe UI Emoji\', sans-serif; font-size: 16px;\"><span class=\"md-pair-s \" style=\"box-sizing: border-box; font-family: \' Noto Serif SC\', \'Noto Serif SC\', \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \'; font-size: 14pt;\">迭代器 Iterator 是什么？</span></h3>\n<p class=\"md-end-block md-p md-focus\" style=\"font-size: 16px; box-sizing: border-box; line-height: inherit; orphans: 4; margin: 0.8em 0px; white-space: pre-wrap; position: relative; color: #333333; font-family: \'Open Sans\', \'Clear Sans\', \'Helvetica Neue\', Helvetica, Arial, \'Segoe UI Emoji\', sans-serif;\"><span class=\"md-plain\" style=\"box-sizing: border-box; font-family: \' Noto Serif SC\', \'Noto Serif SC\', \'Source Han Serif SC\', \'Source Han Serif\', source-han-serif-sc, \'PT Serif\', \'SongTi SC\', \'MicroSoft Yahei\', Georgia, \'serif \';\">java中迭代器用于访问集合，能遍历集合并访问其中的数据</span></p>', '2021-7-5', 'public');

-- ----------------------------
-- Table structure for mb_term_relationships
-- ----------------------------
DROP TABLE IF EXISTS `mb_term_relationships`;
CREATE TABLE `mb_term_relationships`  (
  `post_id` int NOT NULL,
  `term_id` int NOT NULL,
  PRIMARY KEY (`post_id`, `term_id`) USING BTREE,
  INDEX `relationshipterm`(`term_id`) USING BTREE,
  CONSTRAINT `relationshippostid` FOREIGN KEY (`post_id`) REFERENCES `mb_posts` (`post_id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `relationshipterm` FOREIGN KEY (`term_id`) REFERENCES `mb_terms` (`term_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of mb_term_relationships
-- ----------------------------
INSERT INTO `mb_term_relationships` VALUES (1, 1);
INSERT INTO `mb_term_relationships` VALUES (1, 2);
INSERT INTO `mb_term_relationships` VALUES (26, 2);
INSERT INTO `mb_term_relationships` VALUES (1, 3);

-- ----------------------------
-- Table structure for mb_terms
-- ----------------------------
DROP TABLE IF EXISTS `mb_terms`;
CREATE TABLE `mb_terms`  (
  `term_id` int NOT NULL AUTO_INCREMENT,
  `term_name` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `term_status` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  PRIMARY KEY (`term_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 6 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of mb_terms
-- ----------------------------
INSERT INTO `mb_terms` VALUES (1, '前端', 'public');
INSERT INTO `mb_terms` VALUES (2, '杂谈', 'public');
INSERT INTO `mb_terms` VALUES (3, '阅读', 'public');
INSERT INTO `mb_terms` VALUES (5, '后端', 'public');

-- ----------------------------
-- Table structure for mb_users
-- ----------------------------
DROP TABLE IF EXISTS `mb_users`;
CREATE TABLE `mb_users`  (
  `user_id` int NOT NULL AUTO_INCREMENT COMMENT '唯一索引',
  `user_account` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '账号',
  `user_password` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '密码',
  `user_name` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '用户名',
  `user_created` datetime NOT NULL COMMENT '创建时间',
  `user_modified` datetime NULL DEFAULT NULL COMMENT '修改时间',
  `user_status` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '状态',
  `user_email` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '邮箱',
  PRIMARY KEY (`user_id`) USING BTREE,
  UNIQUE INDEX `user_email_UNIQUE`(`user_email`) USING BTREE,
  UNIQUE INDEX `user_account_UNIQUE`(`user_account`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 10 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of mb_users
-- ----------------------------
INSERT INTO `mb_users` VALUES (0, 'root', 'c4d038b4bed09fdb1471ef51ec3a32cd', 'root', '2021-10-27 16:06:07', '2021-10-27 16:06:10', 'root', '380487608@qq.com');
INSERT INTO `mb_users` VALUES (8, NULL, NULL, '浩二', '2022-01-02 03:52:35', '2022-01-02 03:52:35', 'tourist', '114514@qq.com');
INSERT INTO `mb_users` VALUES (9, NULL, NULL, 'senkaryouran', '2022-01-02 03:55:57', '2022-01-02 03:55:57', 'tourist', '3804876081@qq.com');

SET FOREIGN_KEY_CHECKS = 1;
